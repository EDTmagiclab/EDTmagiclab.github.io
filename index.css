@charset "UTF-8";
html {
  width: 100%;
  height: 100%;
}

body {
  display: flex;
  margin: 0px;
  padding: 1.25rem;
  background-color: #F8F4E3;
  color: #2A2B2A;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  flex-direction: column;
  align-items: center;
}

img.github-banner {
  position: absolute;
  top: -5px;
  right: -5px;
  border: 0;
  z-index: 0;
}

.hidden {
  display: none !important;
}

#top-button-group {
  margin-top: 2rem;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: center;
  z-index: 100;
}
#top-button-group a {
  flex: 1;
  margin-left: 1rem;
  margin-right: 1rem;
}
#top-button-group a div {
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
}

#body-text {
  margin-top: 1rem;
  width: 100%;
  justify-content: start;
}

#fumo-examples {
  margin-top: 2rem;
  display: flex;
  flex-direction: row;
  justify-content: center;
  width: 100%;
}
#fumo-examples img {
  border-radius: 1rem;
  margin-left: 1rem;
  margin-right: 1rem;
  max-width: 33%;
}

#faq {
  margin-top: 2rem;
  border-radius: 1rem;
}

.faq-section:not(:nth-child(2)) {
  padding-top: 1rem;
}
.faq-section > input[type=checkbox] {
  display: none;
}
.faq-section > input[type=checkbox]:not(:checked) ~ .faq-question:before {
  content: "＋";
}
.faq-section > input[type=checkbox]:not(:checked) ~ .faq-answer {
  display: none;
}
.faq-section > input[type=checkbox]:checked ~ .faq-question:before {
  content: "－";
}
.faq-section > input[type=checkbox]:checked ~ .faq-answer {
  display: block;
}
.faq-section > .faq-question {
  user-select: none;
  cursor: pointer;
}
.faq-section > .faq-question:before {
  min-width: 1.5rem;
  max-width: 1.5rem;
}
.faq-section .faq-answer {
  margin-top: 0.15rem;
  margin-left: 2rem;
}
.faq-section .faq-answer ul {
  margin-top: 0px;
  padding-left: 0px;
  margin-bottom: 0px;
}

table {
  margin-top: 1rem;
  table-layout: fixed;
  width: 100%;
  border-collapse: collapse;
  border: 3px solid black;
  margin-bottom: 1rem;
}
table caption {
  font-size: larger;
  padding-bottom: 0.5rem;
}
table th {
  background-color: #F8F4E3;
  position: sticky;
  top: -3px;
  z-index: -100;
}
table td, table th {
  text-align: center;
  padding: 0.5rem;
}
table td.left, table th.left {
  text-align: left;
}
table td, table th {
  padding: 1rem;
}

table.striped tbody tr:nth-child(even) {
  background-color: #F8F4E3;
}
table.striped tbody tr:nth-child(odd) {
  background-color: #706C61;
  color: #F8F4E3;
}

table.checkered tbody tr:nth-child(even) td:nth-child(even) {
  background-color: #F8F4E3;
}
table.checkered tbody tr:nth-child(even) td:nth-child(odd) {
  background-color: #706C61;
  color: #F8F4E3;
}
table.checkered tbody tr:nth-child(odd) td:nth-child(odd) {
  background-color: #F8F4E3;
}
table.checkered tbody tr:nth-child(odd) td:nth-child(even) {
  background-color: #706C61;
  color: #F8F4E3;
}

#storefront-list {
  width: 100%;
  display: flex;
  flex-direction: row;
  margin-top: 1rem;
}
#storefront-list > ul {
  margin-top: 0;
  flex: 1;
}
#storefront-list > ul:first-child {
  border-right: 1px solid black;
}
#storefront-list > ul > li > a {
  display: block;
}

#fumo-list {
  width: 100%;
  display: flex;
  flex-direction: column;
}
#fumo-list ul {
  margin-top: 0;
}

input[id=hide-obtained].checklist-control:checked ~ .checklist-controls label[for=hide-obtained] {
  border-color: green;
  background-color: lightgreen;
}
input[id=hide-obtained].checklist-control:checked ~ .checklist-controls label[for=hide-obtained]::before {
  content: "✔️";
}
input[id=hide-obtained].checklist-control:checked ~ #fumo-checklist input.checklist-checkbox:checked + li {
  display: none;
}
input[id=hide-obtained].checklist-control:not(:checked) ~ .checklist-controls label[for=hide-obtained] {
  border-color: red;
}
input[id=hide-obtained].checklist-control:not(:checked) ~ .checklist-controls label[for=hide-obtained]::before {
  content: "❌";
}

input[id=hide-unobtained].checklist-control:checked ~ .checklist-controls label[for=hide-unobtained] {
  border-color: green;
  background-color: lightgreen;
}
input[id=hide-unobtained].checklist-control:checked ~ .checklist-controls label[for=hide-unobtained]::before {
  content: "✔️";
}
input[id=hide-unobtained].checklist-control:checked ~ #fumo-checklist input.checklist-checkbox:not(:checked) + li {
  display: none;
}
input[id=hide-unobtained].checklist-control:not(:checked) ~ .checklist-controls label[for=hide-unobtained] {
  border-color: red;
}
input[id=hide-unobtained].checklist-control:not(:checked) ~ .checklist-controls label[for=hide-unobtained]::before {
  content: "❌";
}

.checklist-controls {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
}
.checklist-controls div {
  flex: 1;
}
.checklist-controls div:first-child {
  margin-bottom: 1rem;
}
.checklist-controls div label {
  user-select: none;
  border: 1px solid;
  border-radius: 0.3rem;
  padding: 0.3rem;
  cursor: pointer;
}
.checklist-controls div span {
  border: 1px solid black;
  border-radius: 0.3rem;
  padding: 0.3rem;
  user-select: none;
  cursor: pointer;
}

#fumo-checklist {
  width: 100%;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
  row-gap: 1rem;
}
#fumo-checklist ul {
  display: inline-block;
  list-style-type: none;
  padding-left: 0px;
}
#fumo-checklist ul li {
  padding: 0.3rem;
}
#fumo-checklist ul li label {
  cursor: pointer;
}
#fumo-checklist input.checklist-checkbox:checked + li div.checklist-item {
  border: 2px solid green;
  background-color: lightgreen;
}
#fumo-checklist input.checklist-checkbox:not(:checked) + li div.checklist-item {
  border: 2px solid red;
}
#fumo-checklist .checklist-character {
  flex: 1 0 21%;
  border-bottom: 2px solid black;
  user-select: none;
}
#fumo-checklist .checklist-character .checklist-item {
  border-radius: 0.3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.3rem;
  padding-bottom: 0.3rem;
}
#fumo-checklist .checklist-character .checklist-item h5 {
  margin-top: 0.3rem;
}
#fumo-checklist .checklist-character .checklist-item img {
  width: 5rem;
}

.list-entry {
  display: flex;
  flex-direction: row;
}
.list-entry img {
  max-height: 20rem;
}
.list-entry div {
  flex: 1;
  padding-left: 2rem;
}
.list-entry div ul {
  list-style: disc;
  padding-left: 2rem;
}
.list-entry div ul li {
  padding-bottom: 0.4rem;
}
.list-entry .rarity[data-rarity=Common]:after {
  content: " (always in stock)";
}
.list-entry .rarity[data-rarity=Uncommon]:after {
  content: " (usually in stock)";
}
.list-entry .rarity[data-rarity=Rare]:after {
  content: " (not always in stock)";
}
.list-entry .rarity[data-rarity="Super Rare"]:after {
  content: " (rarely in stock; might have to wait before any show up)";
}
.list-entry .rarity[data-rarity="Super Super Rare"]:after {
  content: " (practically never in stock)";
}
.list-entry .second-hand-cost[data-second-hand-cost=Normal]:after {
  content: " (price tends to be the same as other fumos of the same type)";
}
.list-entry .second-hand-cost[data-second-hand-cost=High]:after {
  content: " (price tends to be higher than other fumos of the same type)";
}
.list-entry .second-hand-cost[data-second-hand-cost="Very High"]:after {
  content: " (price tends to be significantly higher than other fumos of the same type)";
}

.comma-separated:not(:last-child):after {
  content: ", ";
  user-select: text;
}
.comma-separated:last-child:not(:first-child):not(:nth-child(2)):before {
  content: "and ";
  user-select: text;
}

.jp {
  user-select: all;
}
.jp:not(:last-child):after {
  content: "、";
}

.button {
  display: flex;
  flex-direction: row;
  justify-content: center;
  background-color: #706C61;
  border: 3px solid #2A2B2A;
  padding: 2rem;
  color: #F8F4E3 !important;
  transition: background-color 0.3s ease;
  text-decoration: none;
  border-radius: 1rem;
}

.button:hover {
  background-color: #2a2b2a;
}

h1 {
  margin: 0px;
}

p {
  width: 100%;
  justify-content: start;
}

a {
  color: inherit;
}

a:visited {
  color: inherit;
}

legend {
  background-color: #706C61;
  color: #F8F4E3;
  padding: 0.5rem;
  border-radius: 0.3rem;
}

/*# sourceMappingURL=index.css.map */
