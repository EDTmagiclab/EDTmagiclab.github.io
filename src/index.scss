html {
    width: 100%;
    height: 100%;
}

body {
    display: flex;
    margin: 0px;
    padding: 1.25rem;
    background-color: #F8F4E3;
    color: #2A2B2A;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    flex-direction: column;
    align-items: center;
}

img.github-banner {
    position: absolute;
    top: -5px;
    right: -5px;
    border: 0;
    z-index: 0;
}

.hidden {
    display: none !important;
}

#top-button-group {
    margin-top: 2rem;
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    z-index: 100;

    a {
        flex: 1;
        margin-left: 1rem;
        margin-right: 1rem;

        div {
            text-align: center;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    }
}

#body-text {
    margin-top: 1rem;
    width: 100%;
    justify-content: start;
}

#fumo-examples {
    margin-top: 2rem;
    display: flex;
    flex-direction: row;
    justify-content: center;
    width: 100%;

    img {
        border-radius: 1rem;
        margin-left: 1rem;
        margin-right: 1rem;
        max-width: 33%;
    }
}

#faq {
    margin-top: 2rem;
    border-radius: 1rem;
}

.faq-section {
    &:not(:nth-child(2)) {
        padding-top: 1rem;
    }

    > input[type=checkbox] {
        display: none;

        &:not(:checked) {
            ~ .faq-question:before {
                content: "\0ff0b";
            }

            ~ .faq-answer {
                display: none;
            }
        }

        &:checked {
            ~ .faq-question:before {
                content: "\0ff0d";
            }

            ~ .faq-answer {
                display: block;
            }
        }
    }

    > .faq-question {
        user-select: none;
        cursor: pointer;

        &:before {
            min-width: 1.5rem;
            max-width: 1.5rem;
        }
    }

    .faq-answer {
        margin-top: 0.15rem;
        margin-left: 2rem;

        ul {
            margin-top: 0px;
            padding-left: 0px;
            margin-bottom: 0px;
        }
    }
}

table {
    margin-top: 1rem;
    table-layout: fixed;
    width: 100%;
    border-collapse: collapse;
    border: 3px solid black;
    margin-bottom: 1rem;

    caption {
        font-size: larger;
        padding-bottom: 0.5rem;
    }

    th {
        background-color: #F8F4E3;
        position: sticky;
        top: -3px;
        z-index: -100;
    }


    td, th {
        text-align: center;
        padding: 0.5rem;

        &.left {
            text-align: left;
        }
    }

    & td, & th {
        padding: 1rem;
    }
}

table.striped {
    tbody tr {
        &:nth-child(even) {
            background-color: #F8F4E3;
        }

        &:nth-child(odd) {
            background-color: #706C61;
            color: #F8F4E3;
        }
    }
}

table.checkered {
    tbody tr {
        &:nth-child(even) td {
            &:nth-child(even) {
                background-color: #F8F4E3;
            }

            &:nth-child(odd) {
                background-color: #706C61;
                color: #F8F4E3;
            }
        }

        &:nth-child(odd) td {
            &:nth-child(odd) {
                background-color: #F8F4E3;
            }

            &:nth-child(even) {
                background-color: #706C61;
                color: #F8F4E3;
            }
        }
    }
}

#storefront-list {
    width: 100%;
    display: flex;
    flex-direction: row;
    margin-top: 1rem;

    > ul {
        margin-top: 0;
        flex: 1;

        &:first-child {
            border-right: 1px solid black;
        }

        > li > a {
            display: block;
        }
    }
}

#fumo-list {
    width: 100%;
    display: flex;
    flex-direction: column;

    ul {
        margin-top: 0;
    }
}

input[id="hide-obtained"].checklist-control {
    &:checked {
        &~ .checklist-controls label[for="hide-obtained"] {
            &::before {
                content: "✔️"
            }

            border-color: green;
            background-color: lightgreen;
        }

        &~ #fumo-checklist input.checklist-checkbox:checked + li {
            display: none;
        }
    }

    &:not(:checked) ~ .checklist-controls label[for="hide-obtained"] {
        &::before {
            content: "❌"
        }

        border-color: red;
    }
}

input[id="hide-unobtained"].checklist-control {
    &:checked {
        &~ .checklist-controls label[for="hide-unobtained"] {
            border-color: green;
            background-color: lightgreen;

            &::before {
                content: "✔️"
            }
        }

        &~ #fumo-checklist input.checklist-checkbox:not(:checked) + li {
            display: none;
        }
    }

    &:not(:checked) ~ .checklist-controls label[for="hide-unobtained"] {
        border-color: red;

        &::before {
            content: "❌"
        }
    }
}

.checklist-controls {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;

    div {
        flex: 1;

        &:first-child {
            margin-bottom: 1rem;
        }

        label {
            user-select: none;
            border: 1px solid;
            border-radius: 0.3rem;
            padding: 0.3rem;
            cursor: pointer;
        }

        span {
            border: 1px solid black;
            border-radius: 0.3rem;
            padding: 0.3rem;
            user-select: none;
            cursor: pointer;
        }
    }
}



#fumo-checklist {
    width: 100%;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-evenly;
    row-gap: 1rem;

    ul {
        display: inline-block;
        list-style-type: none;
        padding-left: 0px;

        li {
            padding: 0.3rem;

            label {
                cursor: pointer;
            }
        }
    }

    input.checklist-checkbox:checked + li div.checklist-item {
        border: 2px solid green;
        background-color: lightgreen;
    }

    input.checklist-checkbox:not(:checked) + li div.checklist-item {
        border: 2px solid red;
    }

    .checklist-character {
        flex: 1 0 21%;
        border-bottom: 2px solid black;
        user-select: none;

        .checklist-item {
            border-radius: 0.3rem;
            padding-left: 1rem;
            padding-right: 1rem;
            padding-top: 0.3rem;
            padding-bottom: 0.3rem;

            h5 {
                margin-top: 0.3rem;
            }

            img {
                width: 5rem;
            }
        }
    }
}

.list-entry {
    display: flex;
    flex-direction: row;

    img {
        max-height: 20rem;
    }

    div {
        flex: 1;
        padding-left: 2rem;

        ul {
            list-style: disc;
            padding-left: 2rem;

            li {
                padding-bottom: 0.4rem;
            }
        }
    }

    .rarity {
        &[data-rarity=Common]:after {
            content: " (always in stock)";
        }

        &[data-rarity=Uncommon]:after {
            content: " (usually in stock)";
        }

        &[data-rarity=Rare]:after {
            content: " (not always in stock)";
        }

        &[data-rarity="Super Rare"]:after {
            content: " (rarely in stock; might have to wait before any show up)";
        }

        &[data-rarity="Super Super Rare"]:after {
            content: " (practically never in stock)";
        }
    }

    .second-hand-cost {
        &[data-second-hand-cost=Normal]:after {
            content: " (price tends to be the same as other fumos of the same type)";
        }

        &[data-second-hand-cost=High]:after {
            content: " (price tends to be higher than other fumos of the same type)";
        }

        &[data-second-hand-cost="Very High"]:after {
            content: " (price tends to be significantly higher than other fumos of the same type)";
        }
    }
}


.comma-separated {
    &:not(:last-child):after {
        content: ", ";
        user-select: text;
    }

    &:last-child:not(:first-child):not(:nth-child(2)):before {
        content: "and ";
        user-select: text;
    }
}

.jp {
    &:not(:last-child):after {
        content: "、";
    }

    user-select: all;
}

.button {
    display: flex;
    flex-direction: row;
    justify-content: center;
    background-color: #706C61;
    border: 3px solid #2A2B2A;
    padding: 2rem;
    color: #F8F4E3 !important;
    transition: background-color 0.3s ease;
    text-decoration: none;
    border-radius: 1rem;
}

.button:hover {
    background-color: #2a2b2a;
}

h1 {
    margin: 0px;
}

p {
    width: 100%;
    justify-content: start;
}

a {
    color: inherit;
}

a:visited {
    color: inherit;
}

legend {
    background-color: #706C61;
    color: #F8F4E3;
    padding: 0.5rem;
    border-radius: 0.3rem;
}